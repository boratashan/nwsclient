/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package nwscore;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonParser;
import kong.unirest.HttpResponse;
import kong.unirest.Unirest;
import nwscore.io.DefaultRestClient;
import nwscore.io.InvalidCredentialsException;
import nwscore.io.RestClient;
import nwscore.io.RestClientException;

import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

public class AppDownloadAllTemplates {

    public String getGreeting() {
        return "Hello world.";
    }
    public static String USERNAME = "axelarigato-sandbox.p.api@newstore.com";
    public static String PASSWORD = "Api@2021Mun$2022";

    public static void main(String[] args) throws Exception, InvalidCredentialsException {





        NwsContext context = NwsContext.Builder
                .start()
                .withCredentials(new Credential("btashan@newstore.com", "Bora@Orient!645"))
                .withTenant("axelarigato")
                .withEnvironment(NwsEnvironment.PRODUCTION)
                .withNwsUrl("newstore.net")
                .build();


        RestClient client = new DefaultRestClient(context);
        String path = "/v0/d/templates/templates";


        HttpResponse<String> response = client.get(path, null, null);
        List<String> templateNames = new ArrayList<>();

        if (response.isSuccess()) {
            JsonElement element = JsonParser.parseString(response.getBody());
            JsonArray arr = element.getAsJsonObject().get("data").getAsJsonArray();
            for (JsonElement el : arr) {
                templateNames.add(el.getAsJsonObject().get("id").getAsString());
            }
            System.out.println(response.getBody());
        } else {
            System.out.println(String.format("Failed -> %s", response.toString()));
        }


        NwsContext contextDest = NwsContext.Builder
                .start()
                .withCredentials(new Credential("axelarigato-sandbox.p.api@newstore.com", "Api@2021Mun$2022"))
                .withTenant("axelarigato-sandbox")
                .withEnvironment(NwsEnvironment.PRODUCTION)
                .withNwsUrl("newstore.net")
                .build();
        RestClient destClient = new DefaultRestClient(contextDest);

        for (String template : templateNames) {
            String p = String.format("/v0/d/templates/templates/%s/localization/en-us", template);

            HttpResponse<String> tr = client.get(p, null, null);
        //    System.out.println(tr.getBody());
            String dp = String.format("/v0/d/templates/templates/%s/localization/en-us", template);
            HttpResponse<String> resp = destClient.put(dp, tr.getBody());
            if (resp.isSuccess()) {
                System.out.println("Uploading to dest success");
            } else {
                System.out.println("Uploading to dest FAILED");
                System.out.println(resp.getStatusText());
            }

        }


        doStyles();
    }



    private static void doStyles() throws InvalidCredentialsException, RestClientException, FileNotFoundException {

        NwsContext context = NwsContext.Builder
                .start()
                .withCredentials(new Credential("btashan@newstore.com", "Bora@Orient!645"))
                .withTenant("axelarigato")
                .withEnvironment(NwsEnvironment.PRODUCTION)
                .withNwsUrl("newstore.net")
                .build();


        RestClient client = new DefaultRestClient(context);
        String path = "/v0/d/templates/styles";


        HttpResponse<String> response = client.get(path, null, null);
        List<String> templateNames = new ArrayList<>();

        if (response.isSuccess()) {
            JsonElement element = JsonParser.parseString(response.getBody());
            JsonArray arr = element.getAsJsonObject().get("data").getAsJsonArray();
            for (JsonElement el : arr) {
                templateNames.add(el.getAsJsonObject().get("id").getAsString());
            }
            System.out.println(response.getBody());
        } else {
            System.out.println(String.format("Failed -> %s", response.toString()));
        }


        NwsContext contextDest = NwsContext.Builder
                .start()
                .withCredentials(new Credential("axelarigato-sandbox.p.api@newstore.com", "Api@2021Mun$2022"))
                .withTenant("axelarigato-sandbox")
                .withEnvironment(NwsEnvironment.PRODUCTION)
                .withNwsUrl("newstore.net")
                .build();
        RestClient destClient = new DefaultRestClient(contextDest);


        for (String style : templateNames) {
            String p = String.format("/v0/d/templates/styles/%s", style);

            HttpResponse<String> tr = client.get(p, null, null);

            String dp = String.format("/v0/d/templates/styles/%s", style);
            HttpResponse<String> resp = destClient.put(dp, tr.getBody());
            if (resp.isSuccess()) {
                System.out.println("Uploading to dest success");
            } else {
                System.out.println("Uploading to dest FAILED");
                System.out.println(resp.getStatusText());
            }

        }

    }


}
